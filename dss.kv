#:import Graph kivy.garden.graph.Graph
#:import MeshLinePlot kivy.garden.graph.MeshLinePlot
#:import ListProperty kivy.properties.ListProperty

<RootWidget>:
	do_default_tab: False
	tab_width: self.size[0] / len(self.tab_list)

	TabbedPanelItem:
		id: tab_preprocess
		text: 'Descriptive'



		BoxLayout:
			orientation: 'vertical'
			canvas.before:
				Rectangle:
					# source: './static/sexy_back.jpg'
					# source: 'd.jpg'
					source: './static/back_texture.jpg'
					size: self.size
					pos: self.pos
			
			BoxLayout:
				id: layout
				size_hint_y: .1
				spacing: 10
				padding: [10, 0, 10, 0]



				BoxLayout:
					size_hint: (.01, .5)


				Label:
					
					text: 'Choose source of DB:'
					size: self.texture_size 
					text_size: self.width, None
					color: (0, 0, 0, 2)
					font_size: '20sp'
					halign: 'left'
					valign: 'bottom'
					size_hint: (.2, .5)
					pos_hint: {'top': 0.5 + self.size_hint[1]/2}



				BoxLayout:
					size_hint: (.09, .5)

				
				Button:

					text: 'Internet Link/File'
					
					spacing: (20, 0)
					# background_normal: './static/back_btn.jpg'
					size_hint: (.2, .7)
					pos_hint: {'top': 0.5 + self.size_hint[1]/2}
					on_press: root.internet_popup(*args)



				BoxLayout:
					size_hint: (.15, .5)
				


				Button:
					text: 'Local File'
					size_hint: (.2, .7)
					# background_normal: './static/back_btn.jpg'
					pos_hint: {'top': 0.5 + self.size_hint[1]/2}
					on_press: root.local_file_popup(*args)

				BoxLayout:
					size_hint: (.15, .5)
			
			Widget:
		        id: separator
		        size_hint_y: None
		        height: 3
		        canvas:
		            Color:
		                rgb: 0, 0., 0.
		            Rectangle:
		                pos: 0, separator.center_y
		                size: separator.width, 2

			BoxLayout:
				id: layout
				size_hint_y: .1
				spacing: 10
				padding: [5, 5, 5, 5]
				
				BoxLayout:
					size_hint: (.01, .5)
					padding: [5, 5, 5, 5]

				Label:
					text: 'File Dest.'
					size: self.texture_size # for wrapping
					text_size: self.width, None
					halign: 'left'
					color: (0, 0, 0, 2)
					valign: 'bottom'
					size_hint: (.2, .5)
					pos_hint: {'top': 0.5 + self.size_hint[1]/2}
					font_size: '20sp'
				
				BoxLayout:


					size_hint: (.3, .4)

					pos_hint: {'top': 0.5 + self.size_hint[1]/2}
					
					ScrollView:
						do_scroll_x: True
						do_scroll_y: False 
						# size: self.size
						
						Label:
							id: display_file_name
							text: root.file_name
							text_size: None, None
							size_hint_x: None
							width: self.texture_size[0]
							# spacing: (20, 0)

				BoxLayout:
					size_hint: (.15, .5)
				
				Button:
					text: 'Import'	
					# background_normal: './static/back_btn.jpg'
					size_hint: (.2, .8)
					pos_hint: {'top': 0.5 + self.size_hint[1]/2}
					on_press: root.import_dataset()

				# BoxLayout:
				# 	size_hint: (.15, .5)
			Widget:
		        id: separator
		        size_hint_y: None
		        height: 3
		        canvas:
		            Color:
		                rgb: 1, 1., 1.
		            Rectangle:
		                pos: 0, separator.center_y
		                size: separator.width, 2

			BoxLayout:
				size_hint: (1,0.8)

				
				BoxLayout:
					orientation: 'vertical'
					size_hint: (.2, 1)


					BoxLayout:
						orientation: 'vertical'
						size_hint: (1,0.9)


						
						BoxLayout:
							size_hint:(1, 0.1)

							Label:

								text:'Features to be dropped'
								halign: 'right'
								valign: 'top'
								size_hint:(0.4,1)
								pos_hint: {'top': 1 + self.size_hint[1]/2}
						Widget:
					        id: separator
					        size_hint_y: None
					        height: 1
					        canvas:
					            Color:
					                rgb: 1, 1., 1.
					            Rectangle:
					                pos: self.pos
					                size: self.size
						# BoxLayout:
						# 	size_hint:(1,.15)


						ScrollView:
							size_hint_y: 0.8
							
							
							GridLayout:
								id: layout_content
								height: self.minimum_height
								cols: 2
								size_hint_y: None
								row_default_height: '50dp'
                				# row_force_default: True
			

					BoxLayout:
						size_hint: (1,0.1)
						padding: (5,5,5,5)
						# BoxLayout:
						# 	size_hint: (0.35,1)
							

						Button:
							text: 'Drop'
							# background_normal: './static/back_btn.jpg'
							size_hint: (0.3, 1)
							on_press: root.drop_columns(*args)
							# pos_hint: {'left': 0.5 + self.size_hint[0]/2}
						
						# BoxLayout:
						# 	size_hint: (0.35, 1)
				Widget:
			        id: separator
			        size_hint_x: None
			        width: 1
			        size_hint_y: 1
			        canvas:
			            Color:
			                rgb: 1, 1., 1.
			            Rectangle:
			                pos: self.pos
			                size: self.size


				BoxLayout:
					size_hint: (.2, 1)
					orientation: 'vertical'
					
					BoxLayout:
						
						size_hint:(1, 0.1)
						Label:
							text: 'Stats'
					Widget:
				        id: separator
				        size_hint_y: None
				        height: 1
				        canvas:
				            Color:
				                rgb: 1, 1., 1.
				            Rectangle:
				                pos: self.pos
				                size: self.size
				    BoxLayout:
				    	size_hint_y: .9
						padding: (10,10,0,10)

						ScrollView:
							
							Label:
								id: display_info
								color: (0, 1, 1, .5)
								text: 'Please select the data base or paste the link address'
								text_size: self.width, None
								size_hint_y: None
								height: self.texture_size[1]

				Widget:
			        id: separator
			        size_hint_x: None
			        width: 1
			        size_hint_y: 1
			        canvas:
			            Color:
			                rgb: 1, 1., 1.
			            Rectangle:
			                pos: self.pos
			                size: self.size

				BoxLayout:
					orientation: 'vertical'

					BoxLayout:
		            	size_hint: (1, .1)
		            	
		            	BoxLayout:
		            		size_hint: (.2, 1)
		            	Button:
							id: btn_x
							text: 'X'
							# background_normal: './static/back_btn.jpg'
							font_size: 20
							# pos_hint: {'top': .55}
							size_hint: (.2, 1)
							on_press: root.dropDown(root.column_names + [''], *args)
							
						Button:
							id: btn_y
							text: 'Y'
							# background_normal: './static/back_btn.jpg'
							font_size: 20
							# pos_hint: {'top': .55}
							size_hint: (.2, 1)
							on_press: root.dropDown(root.column_names + [''], *args)
						Button:
							id: btn_hue
							text: 'hue'
							font_size: 20
							# background_normal: './static/back_btn.jpg'
							# pos_hint: {'top': .55}
							size_hint: (.2, 1)
							on_press: root.dropDown(root.column_names + [''], *args)					

						Button:
							id: btn_type
							text: 'Type'
							font_size: 20
							# pos_hint: {'top': .55}
							size_hint: (.2, 1)
							# background_normal: './static/back_btn.jpg'
							on_press: root.dropDown(['Count Plot', 'Pair Plot', 'Factor Plot', 'Dist Plot', 'Scatter Plot', 'Reg Plot', 'Kde Plot', 'Joint Plot', 'Violin Plot', 'Bar Plot', 'Pie Plot', 'Box Plot'], *args)

						Button:
							text: 'Plot'
							font_size: 20
							# background_normal: './static/back_btn.jpg'
							# pos_hint: {'top': .55}
							size_hint: (.2, 1)
							on_press: root.draw_graph(btn_x, btn_y, btn_type, btn_hue)

						BoxLayout:
							size_hint_y: 1
							size_hint_x: .2

					Widget:
				        id: separator
				        size_hint_y: None
				        height: 1
				        canvas:
				            Color:
				                rgb: 1, 1., 1.
				            Rectangle:
				                pos: self.pos
				                size: self.size
					BoxLayout:
						size_hint: (1, .9)
				        id: graph_display
			            padding: [5, 5, 5, 5]
			            width: self.parent.width * 2
			            height: self.parent.height
		    Widget:
		        id: separator
		        size_hint_y: None
		        height: 6
		        canvas:
		            Color:
		                rgb: 1, 1., 1.
		            Rectangle:
		                pos: 0, separator.center_y
		                size: separator.width, 2        
			
			# BoxLayout:
			# 	size_hint: (1, 0.1)
			
			BoxLayout:
				size_hint: (1, 0.1)

				Label:

					text: 'Status:'
					size_hint: (0.2,0.5)
					pos_hint:{'top': 0.5 + self.size_hint[1]/2}
					color: (0, 0, 0, 1)
					valign: 'top'

				# BoxLayout:
				# 	size_hint:(0.3,1)
				Label:

					id: update_status	
					text: root.update_the_status
					size_hint: (0.8,0.5)
					pos_hint: {'top': 0.5 + self.size_hint[1]/2}
					color: (0, 1, 1, .5)
					valign: 'top'


	
	TabbedPanelItem:
		id: tab_predict
		text: 'Predict'

		BoxLayout:
			orientation: 'vertical'
			canvas.before:
				
				Rectangle:
					source: './static/back_texture.jpg'
					size: self.size
					pos: self.pos
			
			BoxLayout:
				orientation: 'horizontal'
				size_hint: (1,.1)

				BoxLayout:
					size_hint: (.08,1)

				Label:
					text: 'Select Classifier Model:'
					size_hint: (0.2,1)
					color: (0,1,1,2)

				BoxLayout:
					size_hint: (.01,1)
					
				Spinner:										#'predict' classifier model choose drop down menu
			    	id: predict_classifier_dropdown
			        text: "< Choose Classifier type >"
			        values: ('Tree based','Non-Tree based')
			        # sync_height: True
			        # background_color: (0.784, 0.443, 0.216, 1) if self.state == 'normal' else (0.659, 0.522, 0.431, 1)
			        color: (0.957, 0.890, 0.843, 1)
			  #       font_size: 20
					pos_hint: {'top': .7} 	
			        size_hint: (.2, .5)
			        on_text: root.updateSubSpinner(predict_classifier_dropdown.text)


			    BoxLayout:
					size_hint: (.01,1)

			    Spinner:
			    	id: choose_classifier

			    	text: '< Choose Classifier >'
			    	pos_hint: {'top': .7}
			        size_hint: (.2, .5)
			    	values: ['None']
			    	on_text: root.predict_model_parameters(choose_classifier.text)


				BoxLayout:
					size_hint: (.1,1)

			Widget:
		        id: separator
		        size_hint_y: None
		        height: 3
		        canvas:
		            Color:
		                rgb: 1,1,1
		            Rectangle:
		                pos: 0, separator.center_y
		                size: separator.width, 2

			BoxLayout:
				orientation: 'horizontal'
				size_hint: (1,.1)

				BoxLayout:
					size_hint: (.2,1)

				Label:
					text: 'Select Predict Parameter:'
					size_hint: (0.2,1)
					color: (0,1,1,2)
					width: self.texture_size[0]

				BoxLayout:
					size_hint: (.1,1)

					# canvas.before:
					# 	Color:
					# 		rgb: 100/255., 149/255., 237/255.
					# 	Rectangle:
					# 		pos: self.pos
					# 		size: self.size

				# Button:															#'predict' parameter to predict choose drop down menu
				# 	id: predict_classifier_dropdown
				# 	text: 'Choose Parameter'
				# 	font_size: 20
				# 	pos_hint: {'top': .7}
				# 	size_hint: (.2, .5)
				# 	on_press: root.dropDown(root.column_names, *args)	

			    Spinner:
			    	id: predict_dropdown_choose_parameter
			        text: "Choose Parameter"
			        values: root.columns
			        # background_color: (0.784, 0.443, 0.216, 1) if self.state == 'normal' else (0.659, 0.522, 0.431, 1)
			        color: (0.957, 0.890, 0.843, 1)
					pos_hint: {'top': .7} 	
			        size_hint: (.3, .5)

			    BoxLayout:
			    	size_hint: (.1,1)

			    Label: 
			    	text: 'Input Test Data'
					size_hint: (0.2,1)
					color: (0,1,1,2)
					width: self.texture_size[0]

				BoxLayout:
					size_hint: (.03,1)

				Button:
					id: test_data_input
					text: 'Import dataset'
					text_width: self.texture_size[0]
					pos_hint: {'top': .7} 	
			        size_hint: (.23, .5)
			        on_press: root.local_test_file_popup(*args)

			    BoxLayout
			    	size_hint: (.01,1)

			    Button:
					id: test_data_input
					text: 'input data manually'
					pos_hint: {'top': .7} 	
			        size_hint: (.3, .5)
			        on_press: root.manual_input_popup(*args)

				BoxLayout:
					size_hint: (.1,1)	

			Widget:
		        id: separator
		        size_hint_y: None
		        height: 3
		        canvas:
		            Color:
		                rgb: 1,1,1
		            Rectangle:
		                pos: 0, separator.center_y
		                size: separator.width, 2

					# CheckBox:
		   #              group: "predict_models"
		   #              color: (0,0.2,0.5,1)  
		   #              on_active: root.predict_parameters(1)
		   #          Label:
		   #              text: "SVM"
		   #              color: (0,0,0,1)

		   #          CheckBox:
		   #              group: "predict_models"
		   #              on_active: root.predict_parameters(2)
		   #          Label
		   #              text: "Random Forest"
		   #              color: (0,0,0,1)

		   #          CheckBox:
		   #              group: "predict_models"
		   #              on_active: root.predict_parameters(3)
		   #          Label
		   #              text: "k-Nearest Neighbours " 
		   #              color: 0,0,0,1

		  #   BoxLayout:
		  #   	orientation: 'horizontal'
		  #   	size_hint: (1,.2)
		  #   	canvas.before:
		  #   		Color:
		  #   			rgb: (0, 1, 1)

		  #   		Rectangle:
		  #   			size:self.size
		  #   			pos: self.pos

		  #   	Label:
		  #   		text: 'Select Predict \n Parameter'
		  #   		color: (0,1,1,2)
		  #   		size_hint: (0.2,1)


				# ScrollView:
				# 	do_scroll_x: True
				# 	do_scroll_y: False
					
				# 	BoxLayout:
				# 		id: set_features
				# 		canvas.before:
				# 			Color:
				# 				rgb: (.75, .65, .65)
				# 			Rectangle:
				# 				size: self.size
				# 				pos: self.pos
				# 		size_hint_x: None
				# 		width: root.number_of_columns*300
				# 		# width: self.texture_size[0]

						


			BoxLayout:
				orientation: 'horizontal'
				size_hint: (1,.6)

				BoxLayout:
					orientation: 'vertical'
					size_hint: (.3,1)

					BoxLayout:
						size_hint: (1,.1)
						# canvas.before:
						# 	Color:
						# 		rgb: 140/255., 50/255., 200/255.
						# 	Rectangle:
						# 		pos: self.pos
						# 		size: self.size	
						Label:
							text: 'Set Parameters'
							font_size: 20
							color: (1,.2,.3,2)

					BoxLayout:
						BoxLayout:
							size_hint: (.1,1)
							
						GridLayout:
							id: layout_predict_parameters
							cols: 2
							spacing: (5,10)
							padding: (0,40,0,20)
								

						BoxLayout:
							size_hint: (.2,1)
				
					Widget:
				        id: separator
				        size_hint_y: None
				        height: 1
				        canvas:
				            Color:
				                rgb: 1, 1., 1.
				            Rectangle:
				                pos: self.pos
				                size: self.size

				BoxLayout:
					id: predict_optimize_layout
					orientation: 'vertical'
					size_hint: (.45,1)

					BoxLayout:
						size_hint: (1,.2)
						Label:
							text: 'Set Parameters by:'
							size: self.texture_size
							color: (0,0,0,2)

						CheckBox:
							group: 'predict_parameter_set'
							active: True
							on_active: root.manual_parameter_selection(*args)
						Label:
							text: ' Manually\n(by Default)'
							color: [.5,.6,0,1]
							size: self.texture_size

						CheckBox:
							id: predict_checkbox_algo
							group: 'predict_parameter_set'
							color: ListProperty([1, .2, .3, 1])
							on_active: root.optimize_algo_selection(*args)
						Label:
							text: 'by Optimisation'
							color: [.5,.6,0,1]
							size: self.texture_size

					BoxLayout:
						id: predict_optimize_algo_selection
						size_hint: (1,.2)
				

					BoxLayout:
						id: predict_optimize_algo_parameters_box
						size_hint: (1,.5)

						ScrollView:
							do_scroll_y: True
							do_scroll_x: False

							GridLayout:
								id: predict_optimize_algo_parameters
								height: self.minimum_height
								cols: 3
								size_hint_y: None
								spacing: (15, 20)
								padding: [5, 5, 5, 5]





					BoxLayout:
						id: predict_optimize_btn
						size_hint: (1,.1)
				# Widget:
			 #        id: separator
			 #        size_hint_y: None
			 #        height: 1
			 #        canvas:
			 #            Color:
			 #                rgb: 1, 1., 1.
			 #            Rectangle:
			 #                pos: self.pos
			 #                size: self.size

				BoxLayout:
					id: predict_output_layout
					orientation: 'vertical'
					size_hint: (.25,1)

					GridLayout:
						cols: 2
						spacing: (5,10)
						padding: (0,40,20,20)

						Label:
							text: 'Accuracy'
							font_size: 15
						TextInput:
							id: accuracy
							# size_hint: (None,.3)
							# height: 5
							disabled: True

						Label:
							text: 'precision'
						TextInput:
							id: precision
							# size_hint: (None,.2)
							# height: 5
							disabled: True

						Label:
							text: 'Recall'
						TextInput:
							id: recall
							# size_hint: (None,.2)
							# height: 5
							disabled: True


						Label:
							text: 'F1-score'

						TextInput:
							id: f1
							# size_hint: (None,.2)
							# height: 5
							disabled: True

						Label:
							text: 'AUC'
						TextInput:
							id: auc_roc
							# size_hint: (None,.2)
							# height: 5
							disabled: True

						Button:
							text: 'View mothafocking graphs'
							on_release:root.graph_popup(*args)

					BoxLayout:
						size_hint_y: .1
						Button:
							text: 'Cross-Validate'
							on_press: root.cross_validate(*args)

			Widget:
		        id: separator
		        size_hint_y: None
		        height: 3
		        canvas:
		            Color:
		                rgb: 1,1,1
		            Rectangle:
		                pos: 0, separator.center_y
		                size: separator.width, 2


			BoxLayout:
				id: predict_result_layout
				size_hint: (1,.15)
				orientation: 'vertical'
				BoxLayout:
					orientation: 'horizontal'

					BoxLayout:

					Label:
						id: predict_parameter_name
						text: predict_dropdown_choose_parameter.text
						font_size: 20
					BoxLayout:
						size_hint_x: .1

					TextInput:
						disabled: True

					BoxLayout:
						size_hint_x: 1


				BoxLayout:

					BoxLayout:

					Button:
						text: 'Predict'
						on_press: root.prediction()
						size_hint_y: .8
						pos_hint: {'top':.9}


					BoxLayout:

			Widget:
		        id: separator
		        size_hint_y: None
		        height: 3
		        canvas:
		            Color:
		                rgb: 1,1,1
		            Rectangle:
		                pos: 0, separator.center_y
		                size: separator.width, 2


			BoxLayout:
				id: predict_status
				size_hint: (1,.05)

				Label:
					id: predict_update_status
					text: 'Happy Prediction!! :)'

	TabbedPanelItem:
		id: tab_optimize
		text: 'Optimize'

		BoxLayout:

			BoxLayout:
				orientation: 'vertical'
				size_hint: (.5, 1)
				BoxLayout:
					orientation: 'vertical'
					size_hint:(1,0.25)
					BoxLayout:
						orientation: 'vertical'
						size_hint:(1,0.25)
						Label:
				        	#font_size: 20
				            text: "Select Model:"
				            size: self.texture_size
				            color: (1,1,1,2)
					BoxLayout:
						orientation: 'horizontal'
						size_hint:(1,0.25)
						canvas.before:
							Color:
								rgb: 140/255., 203/255., 133/255.
							Rectangle:
								pos: self.pos
								size: self.size			

						CheckBox:
				            group: "models"
				            color: (0,.5,1,1) 
				            on_active: root.optimize_parameters(1)   
				        Label:
				            text: "SVM"
				            color: 0,0,0,1
					BoxLayout:
						orientation: 'horizontal'
						size_hint:(1,0.25)
						canvas.before:
							Color:
								rgb: 140/255., 203/255., 133/255.
							Rectangle:
								pos: self.pos
								size: self.size			

						CheckBox:
				            group: "models"
				            color: (0,.5,1,1)
				            on_active: root.optimize_parameters(2)
				        Label
				            text: "Random Forest"
				            color: 0,0,0,1
					BoxLayout:
						orientation: 'horizontal'
						size_hint:(1,0.25)
						canvas.before:
							Color:
								rgb: 140/255., 203/255., 133/255.
							Rectangle:
								pos: self.pos
								size: self.size			

						CheckBox:
				            group: "models"
				            color: 0,.5,1,5
				            on_active: root.optimize_parameters(3)
				        Label
				            text: "k-Nearest Neighbours " 
				            color: 0,0,0,1

				BoxLayout:
		        	orientation: 'vertical'
		        	size_hint:(1,0.7)

		        	BoxLayout:
		        		size_hint: (1,None)
		        		canvas.before:
							Color:
								rgb: 50/255., 203/255., 133/255.
							Rectangle:
								pos: self.pos
								size: self.size			


						Label:
			        		text: "Parameters"
			        		font_size: 20
			        		pos_hint: {'top': 1 + self.size_hint[1]/2}
			        		valign: 'top'

		        	GridLayout:
		        		id: layout_optimize_parameters
		        		cols: 3
		        		spacing: [5,10]
		        		padding: [20,20,20,10]
		        		size_hint: (None,1)
		        		width: self.parent.width
					
				BoxLayout:
					size_hint:(1,0.05)
					BoxLayout:
						size_hint:(0.25,1)
					BoxLayout:
						size_hint:(0.2,1)
						Button:
							text:'Go!'
							# pos_hint: {'top': 0.5 + self.size_hint[1]/2}

		        	BoxLayout:
		        		size_hint:(0.55,1)
			BoxLayout:
				orientation: 'vertical' 
				
	        
		  #   BoxLayout:
		  #       orientation: "horizontal"
		  #       BoxLayout:
		  #           id: layout2
		  #           size_hint: (1,.3)
		  #           Label:
		  #           	font_size: 20
		  #               text: "Select Model:"
		  #               size: self.texture_size
		  #               color: (1,1,1,2)

		  #           BoxLayout:
		  #           	size_hint:(1,0.33)
		            	# CheckBox	:
			            #     group: "models"
			            #     color: (0,.5,1,1) 
			            #     on_active: root.optimize_parameters(1, *args)   
			            # Label:
			            #     text: "SVM"
			            #     color: 0,0,0,1

			 #        BoxLayout:
			 #        	size_hint:(1,0.33)
			 #            CheckBox:
			 #                group: "models"
			 #                color: (0,.5,1,1)
			 #                on_active: root.optimize_parameters(2, *args)
			 #            Label
			 #                text: "Random Forest"
			 #                color: 0,0,0,1

			 #        BoxLayout:
			 #        	size_hint:(1,0.33)
			            # CheckBox:
			            #     group: "models"
			            #     color: (0,.5,1,1)
			            #     on_active: root.optimize_parameters(3, *args)
			            # Label
			            #     text: "k-Nearest\nNeighbours " 
			            #     color: 0,0,0,1
		    
		  #       # GridLayout:
		  #       #     cols: 2
		  #       #     height: self.minimum_height
		  #       #     # orientation: 'horizontal'
		  #       #     canvas.before:
		  #       #         Color:
		  #       #             rgb: 100/255., 149/255., 237/255.
		  #       #         Rectangle:
		  #       #             pos: self.pos
		  #       #             size: self.size
       

<InternetPopup>:
	title: 'Choose File'
	size_hint: (None, None)
	size: (600, 100)
	GridLayout:
		canvas.before:
				
			Rectangle:
				source: './static/popup_texture.jpg'
				size: self.size
				pos: self.pos
		spacing: (10, 0)
		padding: [5, 5, 5, 5]
		cols: 3
		Label:
		    size_hint_x: .2
			text: 'Paste file link:'
		TextInput:
			id: url
			size_hint: (.5, 1)
		Button:
			size_hint_x: .1
			text: 'Go'
			on_press: root.send_file_name(1, *args) 


<LocalFilePopup>:
	title: 'Choose File'
	size_hint: (None, None)
	size: (600, 600)
	BoxLayout:
		canvas.before:
				
			Rectangle:
				source: './static/popup_texture.jpg'
				size: self.size
				pos: self.pos
		FileChooserIconView:
			on_selection: root.select(*args)

<LocalTestFilePopup>:
	title: 'Choose Test File'
	title_align: 'center'
	size_hint: (None, None)
	size: (600, 600)
	BoxLayout:
		orientation: 'vertical'
		canvas.before:
				
			Rectangle:
				source: './static/popup_texture.jpg'
				size: self.size
				pos: self.pos

		BoxLayout:
			FileChooserIconView:
				on_selection: root.select(*args)

		Widget:
	        id: separator1
	        size_hint_y: None
	        height: 3
	        canvas:
	            Color:
	                rgb: 1, 1, 1
	            Rectangle:
	                pos: separator1.x, separator1.center_y
	                size: separator1.width, 2

		BoxLayout:
			size_hint: (1,.2)

			BoxLayout:
				size_hint: (.05,1)

			Label:
				text: 'File Path'
				size_hint: (.1,1)

			BoxLayout:
				size_hint: (.01,1)

			Label:
				text: root.test_filename

			Button:
				text: 'Import'
				size_hint: (.4,.4)
				pos_hint: {'top': 0.5 + self.size_hint[1]/2}
				on_press: root.call_import()

			BoxLayout
				size_hint: (.1,1)

<ManualInputPopup>:
	title: 'Supply test values'
	title_align: 'center'
	title_size: 20
	size_hint: (None, None)
	size: (600, 600)
	BoxLayout:
		canvas.before:
				
			Rectangle:
				source: './static/popup_texture.jpg'
				size: self.size
				pos: self.pos
		orientation: 'vertical'

		BoxLayout:
			size_hint: (1,.2)
			

			Button:
				text: 'Input Data'
				size_hint: (.4,.4)
				pos_hint: {'top': 0.5 + self.size_hint[1]/2}
				on_press: root.populate()

			

			Button:
				text: 'Done'
				size_hint: (.4,.4)
				pos_hint: {'top': 0.5 + self.size_hint[1]/2}
				on_press: root.done()

			
		Widget:
	        id: separator1
	        size_hint_y: None
	        height: 3
	        canvas:
	            Color:
	                rgb: 1, 1, 1
	            Rectangle:
	                pos: separator1.x, separator1.center_y
	                size: separator1.width, 2

	    BoxLayout:

		    

		    ScrollView:
				id: manual_test_scroll
				do_scroll_y: True
				do_scroll_x: False

				GridLayout:
					id: layout_manual_test_data
					height: self.minimum_height
					cols: 2
					size_hint_y: None
					row_default_height: '50dp'
					spacing: (15, 15)
					padding: [5, 5, 5, 20]

			
<GraphPopup>:
	title: 'View Mothafoking Graphs'
	title_align: 'center'
	title_size: 20
	size_hint: (None, None)
	size: (600, 600)
	BoxLayout:	
		orientation: 'vertical'
		BoxLayout:
			id: graph_area
			size_hint_y: 0.9
		BoxLayout:
			size_hint_y: 0.1
			Button:
				text: 'View'
				size_hint_x: 0.2
				on_release: root.view_graph(*args)
				
				




